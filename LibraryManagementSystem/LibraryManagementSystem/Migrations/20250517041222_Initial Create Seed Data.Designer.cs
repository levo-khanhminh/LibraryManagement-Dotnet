// <auto-generated />
using System;
using LibraryManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryManagementSystem.Migrations
{
    [DbContext(typeof(LibraryManagementDbContext))]
    [Migration("20250517041222_Initial Create Seed Data")]
    partial class InitialCreateSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryManagementSystem.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            Biography = "Uncle Bob, software engineer and author of Clean Code.",
                            CreatedDate = new DateTime(2025, 5, 17, 11, 12, 21, 769, DateTimeKind.Local).AddTicks(6007),
                            DateOfBirth = new DateTime(1952, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "unclebob@cleancode.com",
                            FirstName = "Robert",
                            LastName = "Martin",
                            Nationality = "American",
                            Website = "https://cleancoder.com"
                        },
                        new
                        {
                            AuthorId = 2,
                            Biography = "Creator of C++ and prolific technical writer.",
                            CreatedDate = new DateTime(2025, 5, 17, 11, 12, 21, 769, DateTimeKind.Local).AddTicks(6012),
                            DateOfBirth = new DateTime(1950, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bjarne@cppworld.org",
                            FirstName = "Bjarne",
                            LastName = "Stroustrup",
                            Nationality = "Danish",
                            Website = "https://stroustrup.com"
                        },
                        new
                        {
                            AuthorId = 3,
                            Biography = "Author of the Harry Potter fantasy series.",
                            CreatedDate = new DateTime(2025, 5, 17, 11, 12, 21, 769, DateTimeKind.Local).AddTicks(6015),
                            DateOfBirth = new DateTime(1965, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jk@hogwarts.co.uk",
                            FirstName = "J.K.",
                            LastName = "Rowling",
                            Nationality = "British",
                            Website = "https://jkrowling.com"
                        },
                        new
                        {
                            AuthorId = 4,
                            Biography = "Known for his dystopian fiction works.",
                            CreatedDate = new DateTime(2025, 5, 17, 11, 12, 21, 769, DateTimeKind.Local).AddTicks(6019),
                            DateOfBirth = new DateTime(1903, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "george@orwell.net",
                            FirstName = "George",
                            LastName = "Orwell",
                            Nationality = "British",
                            Website = "https://orwellfoundation.com"
                        },
                        new
                        {
                            AuthorId = 5,
                            Biography = "Prolific science fiction writer and biochemist.",
                            CreatedDate = new DateTime(2025, 5, 17, 11, 12, 21, 769, DateTimeKind.Local).AddTicks(6022),
                            DateOfBirth = new DateTime(1920, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "isaac@asimovbooks.com",
                            FirstName = "Isaac",
                            LastName = "Asimov",
                            Nationality = "American",
                            Website = "https://asimovonline.com"
                        },
                        new
                        {
                            AuthorId = 6,
                            Biography = "Science fiction author of 2001: A Space Odyssey.",
                            CreatedDate = new DateTime(2025, 5, 17, 11, 12, 21, 769, DateTimeKind.Local).AddTicks(6026),
                            DateOfBirth = new DateTime(1917, 12, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "arthur@clarkeuniverse.org",
                            FirstName = "Arthur",
                            LastName = "Clarke",
                            Nationality = "British",
                            Website = "https://clarkefoundation.com"
                        });
                });

            modelBuilder.Entity("LibraryManagementSystem.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("AvailableCopies")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pdf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishedYear")
                        .HasColumnType("datetime2");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TotalCopies")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1,
                            AvailableCopies = 10,
                            Avatar = "/books/clean_code.jpeg",
                            BookCode = "PRG001",
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 5, 17, 11, 12, 21, 769, DateTimeKind.Local).AddTicks(6400),
                            Description = "A Handbook of Agile Software Craftsmanship.",
                            Pdf = "pdfs/sample.pdf",
                            PublishedYear = new DateTime(2008, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Publisher = "Prentice Hall",
                            Title = "Clean Code",
                            TotalCopies = 10
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 2,
                            AvailableCopies = 8,
                            Avatar = "/books/theCPP_programing_language.jpeg",
                            BookCode = "PRG002",
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 5, 17, 11, 12, 21, 769, DateTimeKind.Local).AddTicks(6435),
                            Description = "Comprehensive guide to C++ by its creator.",
                            Pdf = "pdfs/sample.pdf",
                            PublishedYear = new DateTime(2013, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Publisher = "Addison-Wesley",
                            Title = "The C++ Programming Language",
                            TotalCopies = 8
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 1,
                            AvailableCopies = 7,
                            Avatar = "/books/clean_architecture.jpg",
                            BookCode = "PRG003",
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 5, 17, 11, 12, 21, 769, DateTimeKind.Local).AddTicks(6452),
                            Description = "A guide to software structure and design.",
                            Pdf = "pdfs/sample.pdf",
                            PublishedYear = new DateTime(2017, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Publisher = "Prentice Hall",
                            Title = "Clean Architecture",
                            TotalCopies = 7
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 3,
                            AvailableCopies = 12,
                            Avatar = "/books/harry_potter_and_philosopher_stones.jpeg",
                            BookCode = "FIC001",
                            CategoryId = 2,
                            CreatedDate = new DateTime(2025, 5, 17, 11, 12, 21, 769, DateTimeKind.Local).AddTicks(6456),
                            Description = "The first book in the famous fantasy series.",
                            Pdf = "pdfs/sample.pdf",
                            PublishedYear = new DateTime(1997, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Publisher = "Bloomsbury",
                            Title = "Harry Potter and the Philosopher's Stone",
                            TotalCopies = 12
                        },
                        new
                        {
                            BookId = 5,
                            AuthorId = 3,
                            AvailableCopies = 10,
                            Avatar = "/books/harry_potter_and_chamber_of_secrets.jpg",
                            BookCode = "FIC002",
                            CategoryId = 2,
                            CreatedDate = new DateTime(2025, 5, 17, 11, 12, 21, 769, DateTimeKind.Local).AddTicks(6468),
                            Description = "The second adventure at Hogwarts.",
                            Pdf = "pdfs/sample.pdf",
                            PublishedYear = new DateTime(1998, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Publisher = "Bloomsbury",
                            Title = "Harry Potter and the Chamber of Secrets",
                            TotalCopies = 10
                        },
                        new
                        {
                            BookId = 6,
                            AuthorId = 4,
                            AvailableCopies = 9,
                            Avatar = "/books/1984-book.png",
                            BookCode = "FIC003",
                            CategoryId = 2,
                            CreatedDate = new DateTime(2025, 5, 17, 11, 12, 21, 769, DateTimeKind.Local).AddTicks(6472),
                            Description = "A dystopian novel about totalitarianism.",
                            Pdf = "pdfs/sample.pdf",
                            PublishedYear = new DateTime(1949, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Publisher = "Secker & Warburg",
                            Title = "1984",
                            TotalCopies = 9
                        },
                        new
                        {
                            BookId = 7,
                            AuthorId = 5,
                            AvailableCopies = 6,
                            Avatar = "/books/foundation.jpg",
                            BookCode = "SCI001",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 5, 17, 11, 12, 21, 769, DateTimeKind.Local).AddTicks(6486),
                            Description = "A science fiction epic on the fall of a galactic empire.",
                            Pdf = "pdfs/sample.pdf",
                            PublishedYear = new DateTime(1951, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Publisher = "Gnome Press",
                            Title = "Foundation",
                            TotalCopies = 6
                        },
                        new
                        {
                            BookId = 8,
                            AuthorId = 5,
                            AvailableCopies = 5,
                            Avatar = "/books/IRobot.jpg",
                            BookCode = "SCI002",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 5, 17, 11, 12, 21, 769, DateTimeKind.Local).AddTicks(6490),
                            Description = "A collection of science fiction short stories.",
                            Pdf = "pdfs/sample.pdf",
                            PublishedYear = new DateTime(1950, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Publisher = "Gnome Press",
                            Title = "I, Robot",
                            TotalCopies = 5
                        },
                        new
                        {
                            BookId = 9,
                            AuthorId = 6,
                            AvailableCopies = 4,
                            Avatar = "/books/space_odyssey.jpg",
                            BookCode = "SCI003",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 5, 17, 11, 12, 21, 769, DateTimeKind.Local).AddTicks(6502),
                            Description = "A novel about humanity’s place in the universe.",
                            Pdf = "pdfs/sample.pdf",
                            PublishedYear = new DateTime(1968, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Publisher = "Hutchinson",
                            Title = "2001: A Space Odyssey",
                            TotalCopies = 4
                        });
                });

            modelBuilder.Entity("LibraryManagementSystem.Models.Carousel", b =>
                {
                    b.Property<int>("CarouselId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarouselId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LinkUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CarouselId");

                    b.ToTable("Carousels");

                    b.HasData(
                        new
                        {
                            CarouselId = 1,
                            CreatedDate = new DateTime(2025, 5, 17, 11, 12, 21, 769, DateTimeKind.Local).AddTicks(5750),
                            Description = "Discover the latest additions to our collection.",
                            ImageUrl = "/images//carousel_images/sample_carousel_1.jpeg",
                            IsActive = true,
                            LinkUrl = "/Books/New",
                            Order = 1,
                            Title = "Explore New Books"
                        },
                        new
                        {
                            CarouselId = 2,
                            CreatedDate = new DateTime(2025, 5, 17, 11, 12, 21, 769, DateTimeKind.Local).AddTicks(5807),
                            Description = "Dive into the works of featured authors.",
                            ImageUrl = "/images/carousel_images/sample_carousel_2.jpeg",
                            IsActive = false,
                            LinkUrl = "/Authors/Spotlight",
                            Order = 2,
                            Title = "Author Spotlight"
                        },
                        new
                        {
                            CarouselId = 3,
                            CreatedDate = new DateTime(2025, 5, 17, 11, 12, 21, 769, DateTimeKind.Local).AddTicks(5810),
                            Description = "Become a member and start borrowing today!",
                            ImageUrl = "/images/carousel_images/sample_carousel_3.webp",
                            IsActive = false,
                            LinkUrl = "/Account/Register",
                            Order = 3,
                            Title = "Join the Library"
                        });
                });

            modelBuilder.Entity("LibraryManagementSystem.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CategoryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Avatar = "/categories/programming_book.jpg",
                            CreatedDate = new DateTime(2025, 5, 17, 11, 12, 21, 769, DateTimeKind.Local).AddTicks(5963),
                            Description = "Books related to programming languages and software development.",
                            IsActive = true,
                            Name = "Programming Book"
                        },
                        new
                        {
                            CategoryId = 2,
                            Avatar = "/categories/fiction.png",
                            CreatedDate = new DateTime(2025, 5, 17, 11, 12, 21, 769, DateTimeKind.Local).AddTicks(5967),
                            Description = "Books that contain fictional stories and literature.",
                            IsActive = true,
                            Name = "Fiction Book"
                        },
                        new
                        {
                            CategoryId = 3,
                            Avatar = "/categories/science_fiction.jpeg",
                            CreatedDate = new DateTime(2025, 5, 17, 11, 12, 21, 769, DateTimeKind.Local).AddTicks(5970),
                            Description = "Books based on futuristic science and technology concepts.",
                            IsActive = true,
                            Name = "Science Fiction Book"
                        });
                });

            modelBuilder.Entity("LibraryManagementSystem.Models.Loan", b =>
                {
                    b.Property<int>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanId"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoanId");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("LibraryManagementSystem.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("ActiveCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("LibraryManagementSystem.Models.Book", b =>
                {
                    b.HasOne("LibraryManagementSystem.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagementSystem.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LibraryManagementSystem.Models.Loan", b =>
                {
                    b.HasOne("LibraryManagementSystem.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagementSystem.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LibraryManagementSystem.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LibraryManagementSystem.Models.Category", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
